# -*- coding: utf-8 -*-
"""Copy of Untitled6.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1i5Bs5pJUAGnS2HNsH3Yn1h_OPIrY42X3
"""

stri ='hi i am prachi shukla'
if 'bye'  not in stri:
  print("no,'bye' is not thr.")

age = 36
color = "white"

txt = "My name is John,my age is {},my color is {}"
print(txt.format(age,color))

txt = "We are the so-called \"Vikings\" from the north."
txt

#Iterable is an object,on which we can perform iteration.#memory will allocate for these object in storage.
# All these objects have a iter() method which is used to get an iterator:
#Iterators have __next__() method, which returns the next item of the object.


#example: list, tuple

lst =[1,2,3,4,5]

#The __next__() method will raise a StopIteration exception, if there are no further elements available

car=['BMW','AUDI','SWIFT','ALTO']

ITR_CAR = iter(car)
print(next(ITR_CAR))
print(next(ITR_CAR))
print(next(ITR_CAR))
print(next(ITR_CAR))
#print(next(ITR_CAR))

#map & filter function:

#The map() function takes two inputs as a function and an iterable object. The function that is given to map() is a normal function, 
#and it will iterate over all the values present in the iterable object given
#map(func,iterable)

def square(n):
    return n*n
    
my_list = [2,3,4,5,6,7,8,9]
updated_list = map(square, my_list)

print(list(updated_list))

#Filter function:
#The filter() function returns an iterator were the items are filtered through a function to test if the item is accepted or not.
#filter(function, iterable)

age = [3,5,6,7, 17, 18, 34, 52]

def myFunc(n):
  if n < 18:
    return True
  else:
    return False

children = filter(myFunc, age)

for x in children:
  print(x)